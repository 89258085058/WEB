{"name": "Позитивные сценарии: Проверка ввода значений в поле 'Название' ВЫХОД № 1", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка локатор поля ввода '//*[@id=\"username\"]' - не найден", "trace": "self = <fixture.method.MethodsHelper object at 0x0000027015586110>, value = 'antipov8v@gmail.com', locator = '//*[@id=\"email\"]'\n\n    def inputValues(self, value, locator):\n        try:\n            wd = self.app.wd\n>           element = WebDriverWait(wd, 10).until(\n                EC.element_to_be_clickable((By.XPATH, ('%s' % locator))))\n\nfixture\\method.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eccc142b25ce2d11631afaa0c13ba517\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000270159B53A0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x004AF243]\nE       \t(No symbol) [0x00437FD1]\nE       \t(No symbol) [0x0032D04D]\nE       \t(No symbol) [0x0035C0B0]\nE       \t(No symbol) [0x0035C22B]\nE       \t(No symbol) [0x0038E612]\nE       \t(No symbol) [0x003785D4]\nE       \t(No symbol) [0x0038C9EB]\nE       \t(No symbol) [0x00378386]\nE       \t(No symbol) [0x0035163C]\nE       \t(No symbol) [0x0035269D]\nE       \tGetHandleVerifier [0x00749A22+2655074]\nE       \tGetHandleVerifier [0x0073CA24+2601828]\nE       \tGetHandleVerifier [0x00558C0A+619850]\nE       \tGetHandleVerifier [0x00557830+614768]\nE       \t(No symbol) [0x004405FC]\nE       \t(No symbol) [0x00445968]\nE       \t(No symbol) [0x00445A55]\nE       \t(No symbol) [0x0045051B]\nE       \tBaseThreadInitThunk [0x7648FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77317A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77317A4E+238]\n\nenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:87: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <fixture.session.SessionHelper object at 0x0000027015587CD0>, username = 'admin', password = 'admin'\n\n    def login_remote(self, username, password):\n        with allure.step(\"Авторизация пользователя\"):\n            try:\n                wd = self.app.wd\n                wd.get(self.app.base_url)\n>               self.app.method.inputValues('antipov8v@gmail.com', '//*[@id=\"email\"]')\n\nfixture\\session.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <fixture.method.MethodsHelper object at 0x0000027015586110>, value = 'antipov8v@gmail.com', locator = '//*[@id=\"email\"]'\n\n    def inputValues(self, value, locator):\n        try:\n            wd = self.app.wd\n            element = WebDriverWait(wd, 10).until(\n                EC.element_to_be_clickable((By.XPATH, ('%s' % locator))))\n            element.clear()\n            element.send_keys(value)\n            # element.click()\n        except Exception as e:\n>           assert e == TimeoutException, f\"Ошибка локатор поля ввода '{locator}' - не найден\"\nE           AssertionError: Ошибка локатор поля ввода '//*[@id=\"email\"]' - не найден\n\nfixture\\method.py:42: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <fixture.method.MethodsHelper object at 0x0000027015586110>, value = 'admin', locator = '//*[@id=\"username\"]'\n\n    def inputValues(self, value, locator):\n        try:\n            wd = self.app.wd\n>           element = WebDriverWait(wd, 10).until(\n                EC.element_to_be_clickable((By.XPATH, ('%s' % locator))))\n\nfixture\\method.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eccc142b25ce2d11631afaa0c13ba517\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000270159D89A0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x004AF243]\nE       \t(No symbol) [0x00437FD1]\nE       \t(No symbol) [0x0032D04D]\nE       \t(No symbol) [0x0035C0B0]\nE       \t(No symbol) [0x0035C22B]\nE       \t(No symbol) [0x0038E612]\nE       \t(No symbol) [0x003785D4]\nE       \t(No symbol) [0x0038C9EB]\nE       \t(No symbol) [0x00378386]\nE       \t(No symbol) [0x0035163C]\nE       \t(No symbol) [0x0035269D]\nE       \tGetHandleVerifier [0x00749A22+2655074]\nE       \tGetHandleVerifier [0x0073CA24+2601828]\nE       \tGetHandleVerifier [0x00558C0A+619850]\nE       \tGetHandleVerifier [0x00557830+614768]\nE       \t(No symbol) [0x004405FC]\nE       \t(No symbol) [0x00445968]\nE       \t(No symbol) [0x00445A55]\nE       \t(No symbol) [0x0045051B]\nE       \tBaseThreadInitThunk [0x7648FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77317A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77317A4E+238]\n\nenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:87: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'app' for <Function test_out_1_input_name_positiv>>\n\n    @pytest.fixture(scope='class')\n    def app(request):\n        global fixture\n    \n        if request.config.getoption(\"--device\") == 'remote':\n            browser = request.config.getoption(\"--browser\")\n            web_config = load_config(request.config.getoption(\"--target\"))[\"web_remote\"]\n            logAndPas = load_config(request.config.getoption(\"--target\"))[\"webadmin\"]\n            if fixture is None or not fixture.is_valid():\n                fixture = Application(browser=browser, base_url=web_config[\"baseUrl_remote\"],\n                                      base_url_for_check=web_config[\"baseUrl_remote_signal\"])\n>           fixture.session.ensure_login_remote(username=logAndPas[\"username\"], password=logAndPas[\"password\"])\n\nconftest.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixture\\session.py:103: in ensure_login_remote\n    self.login_remote(username, password)\nfixture\\session.py:61: in login_remote\n    self.app.method.inputValues(username, '//*[@id=\"username\"]')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <fixture.method.MethodsHelper object at 0x0000027015586110>, value = 'admin', locator = '//*[@id=\"username\"]'\n\n    def inputValues(self, value, locator):\n        try:\n            wd = self.app.wd\n            element = WebDriverWait(wd, 10).until(\n                EC.element_to_be_clickable((By.XPATH, ('%s' % locator))))\n            element.clear()\n            element.send_keys(value)\n            # element.click()\n        except Exception as e:\n>           assert e == TimeoutException, f\"Ошибка локатор поля ввода '{locator}' - не найден\"\nE           AssertionError: Ошибка локатор поля ввода '//*[@id=\"username\"]' - не найден\n\nfixture\\method.py:42: AssertionError"}, "attachments": [{"name": "↓ СКРИНШОТ ↓", "source": "25f9a1c7-a8cd-4249-852f-528fe26a5b7e-attachment.png", "type": "image/png"}], "start": 1671538317837, "stop": 1671538317837, "uuid": "5ef1fccf-f2ac-48f4-9744-fed748623789", "historyId": "fd69ad9cf724e7964b9418698fa11c22", "testCaseId": "b0bcda7e747b309e86e79f23728ac080", "fullName": "tests.VALIDATION.testZonePathValidation.TestZonePathValidationOuts#test_out_1_input_name_positiv", "labels": [{"name": "story", "value": "ВЫХОДЫ"}, {"name": "owner", "value": "Александр Горелов"}, {"name": "feature", "value": "Валидация полей ввода"}, {"name": "epic", "value": "Тесты ЗОНЫ/РАЗДЕЛЫ"}, {"name": "tag", "value": "flaky(reruns=1)"}, {"name": "parentSuite", "value": "tests.VALIDATION"}, {"name": "suite", "value": "testZonePathValidation"}, {"name": "subSuite", "value": "TestZonePathValidationOuts"}, {"name": "host", "value": "zelenograd-5"}, {"name": "thread", "value": "4676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.VALIDATION.testZonePathValidation"}]}